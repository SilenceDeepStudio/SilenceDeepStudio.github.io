name: 博客自动更新与部署

# 触发条件：
# 1. 手动触发（方便紧急更新）
# 2. 推送到 main 分支时触发（提交新文章后自动更新）
# 3. 每周日 0 点自动更新（定时任务）
on:
  workflow_dispatch: # 手动触发
  push:
    branches: ["main"] # 推送到 main 分支时
  schedule:
    - cron: "0 0 * * 0" # 每周日 00:00（UTC时间，北京时间+8，即周日 8:00）

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest # 使用 Ubuntu 环境

    steps:
      # 步骤1：拉取仓库代码
      - name: 检出代码
        uses: actions/checkout@v4

      # 步骤2：设置 Node.js 环境（运行 main.js 需要）
      - name: 配置 Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20 # 使用 Node.js 20 版本（兼容你的脚本）

      # 步骤3：安装依赖（jsdom、marked 等）
      - name: 安装依赖
        run: |
          npm install  # 读取 package.json 安装依赖
        # 步骤3.5：构建 Tailwind CSS（新增）

      - name: 构建 Tailwind CSS
        run: |
          npx tailwindcss build -i ./src/input.css -o ./src/output.css
        # 根据你的实际路径调整

      # 步骤4：运行 main.js 更新文章（生成卡片和 HTML）
      - name: 运行脚本更新文章
        run: |
          node main.js  # 执行你的脚本，生成/更新文章

      # 步骤5：提交自动更新的文件（如 index.html、生成的文章 HTML）
      - name: 提交更新
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add .
          git commit -m "自动更新文章（$(date +'%Y-%m-%d')）" || echo "无内容需要更新"
          git push

      # 步骤6：部署到 GitHub Pages
      - name: 部署到 GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }} # 自动生成的 Token，无需手动配置
          publish_branch: gh-pages # 部署到 gh-pages 分支（GitHub Pages 默认读取此分支）
          publish_dir: . # 部署根目录下的所有文件（包括 index.html 和文章 HTML）
